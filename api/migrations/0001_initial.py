# Generated by Django 5.0.7 on 2024-07-16 12:29

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EmailSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_backend', models.CharField(choices=[('django.core.mail.backends.smtp.EmailBackend', 'SMTP'), ('django.core.mail.backends.console.EmailBackend', 'Console')], default='django.core.mail.backends.smtp.EmailBackend', max_length=255)),
                ('email_service', models.CharField(blank=True, choices=[('Gmail', 'Gmail'), ('Outlook', 'Outlook'), ('Yahoo Mail', 'Yahoo Mail'), ('Zoho Mail', 'Zoho Mail'), ('GMX', 'GMX'), ('AOL Mail', 'AOL Mail'), ('ProtonMail', 'ProtonMail'), ('SMTP2GO', 'SMTP2GO'), ('SendPulse', 'SendPulse'), ('MailerSend', 'MailerSend'), ('Mailtrap', 'Mailtrap'), ('Postmark', 'Postmark'), ('SendGrid', 'SendGrid'), ('Manual', 'Manual')], max_length=255, null=True)),
                ('email_host', models.CharField(blank=True, max_length=255, null=True)),
                ('email_port', models.IntegerField(blank=True, null=True)),
                ('email_use_tls', models.BooleanField(default=True)),
                ('email_host_user', models.EmailField(blank=True, max_length=254, null=True)),
                ('email_host_password', models.CharField(blank=True, max_length=255, null=True)),
                ('default_from_email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Data de Exclusão')),
                ('HDR', models.CharField(blank=True, max_length=50, null=True)),
                ('device_id', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Identificador')),
                ('report_map', models.CharField(blank=True, max_length=50, null=True)),
                ('model', models.CharField(blank=True, max_length=50, null=True)),
                ('software_version', models.CharField(blank=True, max_length=50, null=True)),
                ('message_type', models.CharField(blank=True, max_length=50, null=True)),
                ('data', models.CharField(blank=True, max_length=50, null=True)),
                ('hora', models.CharField(blank=True, max_length=50, null=True)),
                ('latitude', models.CharField(blank=True, max_length=50, null=True)),
                ('longitude', models.CharField(blank=True, max_length=50, null=True)),
                ('speed_gps', models.CharField(blank=True, max_length=50, null=True)),
                ('course', models.CharField(blank=True, max_length=50, null=True)),
                ('satellites', models.CharField(blank=True, max_length=50, null=True)),
                ('fix_status', models.CharField(blank=True, max_length=50, null=True)),
                ('in_state', models.CharField(blank=True, max_length=50, null=True)),
                ('out_state', models.CharField(blank=True, max_length=50, null=True)),
                ('mode', models.CharField(blank=True, max_length=50, null=True)),
                ('report_type', models.CharField(blank=True, max_length=50, null=True)),
                ('message_number', models.CharField(blank=True, max_length=50, null=True)),
                ('reserved', models.CharField(blank=True, max_length=50, null=True)),
                ('assign_map', models.CharField(blank=True, max_length=50, null=True)),
                ('power_voltage', models.FloatField(blank=True, null=True)),
                ('bateria_suntech', models.FloatField(blank=True, null=True)),
                ('connection_rat', models.CharField(blank=True, max_length=50, null=True)),
                ('acceleration_x', models.FloatField(blank=True, null=True)),
                ('acceleration_y', models.FloatField(blank=True, null=True)),
                ('acceleration_z', models.FloatField(blank=True, null=True)),
                ('ADC', models.CharField(blank=True, max_length=50, null=True)),
                ('GPS_odometer', models.CharField(blank=True, max_length=50, null=True)),
                ('trip_distance', models.CharField(blank=True, max_length=50, null=True)),
                ('horimeter', models.CharField(default='0', max_length=100)),
                ('trip_horimeter', models.CharField(blank=True, max_length=50, null=True)),
                ('idle_time', models.CharField(blank=True, max_length=50, null=True)),
                ('impact', models.FloatField(blank=True, null=True)),
                ('SoC_battery_voltage', models.FloatField(blank=True, null=True)),
                ('temperatura', models.FloatField(blank=True, null=True)),
                ('data_length', models.CharField(blank=True, max_length=50, null=True)),
                ('RFID', models.CharField(blank=True, max_length=50, null=True)),
                ('velocidade_instantanea', models.CharField(blank=True, max_length=50, null=True)),
                ('velocidade_pico', models.CharField(blank=True, max_length=50, null=True)),
                ('temperatura_instantanea', models.CharField(blank=True, max_length=50, null=True)),
                ('temperatura_pico', models.CharField(blank=True, max_length=50, null=True)),
                ('alert_id', models.CharField(blank=True, max_length=50, null=True)),
                ('alert_modifier', models.CharField(blank=True, max_length=50, null=True)),
                ('alert_data', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'Devices',
                'indexes': [models.Index(fields=['device_id'], name='api_device_device__121d16_idx'), models.Index(fields=['horimeter'], name='api_device_horimet_4b4b3f_idx')],
            },
        ),
        migrations.CreateModel(
            name='DeviceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_message', models.TextField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('additional_info', models.CharField(blank=True, max_length=255, null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.device')),
            ],
            options={
                'verbose_name_plural': 'Device Logs',
                'indexes': [models.Index(fields=['device', 'timestamp'], name='api_devicel_device__6d2e3e_idx')],
            },
        ),
    ]
